{"version":3,"sources":["svg/MindTrick.svg","svg/SolarSystem.svg","svg/RectAnimation.svg","svg/StarsNStripes.svg","svg/Pendulum.svg","svg/Car.svg","svg/Wheel.svg","svg/Hypnosis.svg","constants/music/Time.mp3","constants/music/CornfieldChase.mp3","constants/music/DayOne.mp3","constants/Themes.tsx","components/FavButton/FavButton.tsx","components/SvgCard/SvgCard.tsx","svg/Svgs.tsx","pages/Home.tsx","components/SideDrawer/DrawerToggleButton.tsx","components/Toolbar/Toolbar.tsx","components/ThemeButton/ThemeButton.tsx","components/ThemeButton/ThemeButtonContainer.tsx","components/SideDrawer/SideDrawer.tsx","components/Backdrop/Backdrop.tsx","components/SvgGallery/SvgGallery.tsx","pages/Gallery.tsx","pages/Favorites.tsx","components/AudioPlayer/AudioPlayer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","themes","dark","primary","secondary","text","songName","bgImage","space","beach","crazy","ThemeContext","React","createContext","FavButton","saveFavorite","currentFav","localStorage","getItem","clickedFav","props","index","length","setItem","indexOf","replace","forceUpdate","buttonColor","includes","this","id","data-testid","className","onClick","style","color","Component","SvgCard","currentSvg","changeSvg","useState","isLoading","setIsLoading","fetchedText","setFetchedText","fetchPoetry","a","fetch","then","res","json","result","lines","reduce","prev","curr","key","error","console","log","useEffect","Consumer","appContext","borderColor","theme","background","src","svg","alt","name","toString","label","Svgs","MindTrick","SolarSystem","RectAnimation","StarsNStripes","Pendulum","hypno","wheel","car","Home","favIndex","match","params","parseInt","randomFav","charAt","Math","floor","random","chooseSvg","next","history","push","backgroundRepeat","drawerToggleButton","click","textColor","toolbar","drawerClickHandler","to","ThemeButton","toggleTheme","sessionStorage","JSON","stringify","ThemeButtonContainer","sideDrawer","drawerClasses","show","backdrop","SvgGallery","gridSvgs","svgs","Iitem","backgroundColor","bgColor","display","link","height","width","svgObject","ListItems","map","i","Gallery","Favorites","hasFavorites","setHasFavorites","favorites","favoriteList","split","svgFavorites","filter","fontSize","AudioPlayer","controls","autoPlay","controlsList","require","type","App","sideDrawerOpen","setSideDrawerOpen","selectedTheme","startTheme","parse","setTheme","context","val","Provider","value","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c0abf306.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MindTrick.bc851f60.svg\";","module.exports = __webpack_public_path__ + \"static/media/SolarSystem.250e80fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/RectAnimation.d4dc3841.svg\";","module.exports = __webpack_public_path__ + \"static/media/StarsNStripes.0f713139.svg\";","module.exports = __webpack_public_path__ + \"static/media/Pendulum.badd782c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Car.82f07154.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wheel.798d91f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hypnosis.b30feaa8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Time.9a3b8393.mp3\";","module.exports = __webpack_public_path__ + \"static/media/CornfieldChase.6fc4514e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/DayOne.cb70d3f1.mp3\";","import React from \"react\";\r\n\r\nexport interface AppContextInterface {\r\n  theme: any;\r\n  toggleTheme: (value: any) => void;\r\n}\r\n\r\nexport const themes = {\r\n  dark: {\r\n    primary: \"#333333\",\r\n    secondary: \"black\",\r\n    text: \"white\",\r\n    songName: \"DayOne.mp3\",\r\n    bgImage:\r\n      \"url(\" +\r\n      \"https://lesilets.com/wp-content/uploads/2018/04/1096907-cool-dark-background-2560x1600-for-tablet.jpg\" +\r\n      \")\",\r\n  },\r\n  space: {\r\n    primary: \"#343d46\",\r\n    secondary: \"#121212\",\r\n    text: \"white\",\r\n    bgImage: \"url(\" + \"https://wallpapercave.com/wp/wp2917445.jpg\" + \")\",\r\n    songName: \"CornfieldChase.mp3\",\r\n  },\r\n  beach: {\r\n    primary: \"white\",\r\n    secondary: \"#0077be\",\r\n    text: \"black\",\r\n    bgImage: \"url(\" + \"https://image.tmdb.org/t/p/original/n96EJQ8KzFVAFZo8PWVq4mjcyTK.jpg\" + \")\",\r\n    songName: \"DayOne.mp3\",\r\n  },\r\n  crazy: {\r\n    primary: \"yellow\",\r\n    secondary: \"orange\",\r\n    text: \"black\",\r\n    bgImage:\r\n      \"url(\" +\r\n      \"https://www.wallpapers4u.org/wp-content/uploads/crazy_frog_rocket_rays_teeth_fail_1763_1920x1080.jpg\" +\r\n      \")\",\r\n    songName: \"CrazyFrog.mp3\",\r\n  },\r\n};\r\n\r\nexport const ThemeContext = React.createContext<AppContextInterface | null>(null);\r\n","import React from \"react\";\r\nimport \"./FavButton.css\";\r\n\r\ninterface ButtonProps {\r\n  index: string;\r\n  label: string;\r\n}\r\n\r\ninterface ButtonState {}\r\n\r\nclass FavButton extends React.Component<ButtonProps, ButtonState> {\r\n  // Save favorite\r\n  saveFavorite = () => {\r\n    var currentFav = localStorage.getItem(\"favorite\");\r\n    const clickedFav = this.props.index;\r\n    if (currentFav === null) {\r\n      localStorage.setItem(\"favorite\", this.props.index);\r\n    } else if (currentFav.length === 0) {\r\n      localStorage.setItem(\"favorite\", this.props.index);\r\n    } else {\r\n      if (currentFav.indexOf(clickedFav) > -1) {\r\n        currentFav = currentFav.replace(clickedFav, \"\");\r\n        localStorage.setItem(\"favorite\", currentFav);\r\n      } else {\r\n        currentFav = currentFav + clickedFav;\r\n        localStorage.setItem(\"favorite\", currentFav);\r\n      }\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    let buttonColor;\r\n    if (localStorage.getItem(\"favorite\")?.includes(this.props.index)) {\r\n      buttonColor = \"red\";\r\n    }\r\n    return (\r\n      <button\r\n        id=\"favbutton\"\r\n        data-testid=\"favbut\"\r\n        className=\"FavButton\"\r\n        onClick={this.saveFavorite}\r\n        style={{ color: buttonColor }}\r\n      >\r\n        &#10084;\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FavButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SvgCard.css\";\r\nimport { ThemeContext } from \"../../constants/Themes\";\r\nimport FavButton from \"../FavButton/FavButton\";\r\n\r\ninterface Props {\r\n  currentSvg: { name: string; svg: string; index: number };\r\n  changeSvg: any;\r\n}\r\n\r\nconst SvgCard = ({ currentSvg, changeSvg }: Props) => {\r\n  // Fetch poetry\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [fetchedText, setFetchedText] = useState([]);\r\n\r\n  const fetchPoetry = async () => {\r\n    setIsLoading(true);\r\n    await fetch(\"https://poetrydb.org/random,linecount/1;10\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setFetchedText(result[0].lines.reduce((prev, curr, index) => [prev, <br key={index} />, curr]));\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          return;\r\n        }\r\n      );\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPoetry();\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {(appContext) =>\r\n        appContext && (\r\n          <div>\r\n            <div\r\n              className=\"SvgCard\"\r\n              style={{\r\n                borderColor: appContext.theme.text,\r\n              }}\r\n            >\r\n              <div className=\"SvgContainer\" style={{ background: appContext.theme.secondary }}>\r\n                <img src={currentSvg.svg} className=\"Svg\" alt=\"logo\" />\r\n              </div>\r\n              <div className=\"TextContainer\" style={{ background: appContext.theme.secondary }}>\r\n                <div className=\"ImageText\" style={{ color: appContext.theme.text }}>\r\n                  <h1>{currentSvg.name}</h1>\r\n                  {isLoading && <p> Fetching poetry... </p>}\r\n                  {!isLoading && <p> {fetchedText}</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ButtonSection\">\r\n              <button\r\n                className=\"RedirectButtons\"\r\n                style={{ color: appContext.theme.text }}\r\n                onClick={() => {\r\n                  changeSvg(currentSvg.index, false);\r\n                  fetchPoetry();\r\n                }}\r\n              >\r\n                &#171;\r\n              </button>\r\n              <FavButton index={currentSvg.index.toString()} label=\"Save as favorite\" />\r\n              <button\r\n                className=\"RedirectButtons\"\r\n                style={{ color: appContext.theme.text }}\r\n                onClick={() => {\r\n                  changeSvg(currentSvg.index, true);\r\n                  fetchPoetry();\r\n                }}\r\n              >\r\n                &#187;\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </ThemeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default SvgCard;\r\n","import MindTrick from \"./MindTrick.svg\";\r\nimport SolarSystem from \"./SolarSystem.svg\";\r\nimport RectAnimation from \"./RectAnimation.svg\";\r\nimport StarsNStripes from \"./StarsNStripes.svg\";\r\nimport Pendulum from \"./Pendulum.svg\";\r\nimport car from \"./Car.svg\";\r\nimport wheel from \"./Wheel.svg\";\r\nimport hypno from \"./Hypnosis.svg\";\r\n\r\nconst Svgs = [\r\n  {\r\n    name: \"Crazy circle illusion\",\r\n    svg: MindTrick,\r\n    index: 0,\r\n  },\r\n  {\r\n    name: \"Solar systems\",\r\n    svg: SolarSystem,\r\n    index: 1,\r\n  },\r\n  {\r\n    name: \"Mystic rectangles\",\r\n    svg: RectAnimation,\r\n    index: 2,\r\n  },\r\n  {\r\n    name: \"Stars n' Stripes\",\r\n    svg: StarsNStripes,\r\n    index: 3,\r\n  },\r\n  {\r\n    name: \"Perfect Pendulum\",\r\n    svg: Pendulum,\r\n    index: 4,\r\n  },\r\n  {\r\n    name: \"Hypnosis\",\r\n    svg: hypno,\r\n    index: 5,\r\n  },\r\n  {\r\n    name: \"Hamster wheel\",\r\n    svg: wheel,\r\n    index: 6,\r\n  },\r\n  {\r\n    name: \"Road trip\",\r\n    svg: car,\r\n    index: 7,\r\n  },\r\n];\r\n\r\nexport default Svgs;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport SvgCard from \"../components/SvgCard/SvgCard\";\r\nimport { ThemeContext } from \"../constants/Themes\";\r\nimport Svgs from \"../svg/Svgs\";\r\n\r\nfunction Home(props) {\r\n  const chooseSvg = () => {\r\n    const favIndex = localStorage.getItem(\"favorite\");\r\n    if (props.match.params.index) {\r\n      return Svgs[parseInt(props.match.params.index)];\r\n    } else if (favIndex) {\r\n      const randomFav = favIndex.charAt(Math.floor(Math.random() * Math.floor(favIndex.length)));\r\n      return Svgs[parseInt(randomFav)];\r\n    }\r\n\r\n    let index = Math.floor(Math.random() * Math.floor(Svgs.length));\r\n    return Svgs[index];\r\n  };\r\n\r\n  const currentSvg = chooseSvg();\r\n\r\n  const changeSvg = (index: number, next: boolean) => {\r\n    if (next) {\r\n      if (index === Svgs.length - 1) {\r\n        props.history.push(\"/\" + 0);\r\n      } else {\r\n        props.history.push(\"/\" + (index + 1));\r\n      }\r\n    } else {\r\n      if (index === 0) {\r\n        props.history.push(\"/\" + (Svgs.length - 1));\r\n      } else {\r\n        props.history.push(\"/\" + (index - 1));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {(appContext) =>\r\n        appContext && (\r\n          <div\r\n            className=\"PageContainer\"\r\n            style={{\r\n              background: appContext.theme.bgImage,\r\n              backgroundRepeat: \"none\",\r\n            }}\r\n          >\r\n            <SvgCard currentSvg={currentSvg} changeSvg={changeSvg} />\r\n          </div>\r\n        )\r\n      }\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport \"./DrawerToggleButton.css\";\r\n\r\nconst drawerToggleButton = (props: any) => (\r\n  <button className=\"toggle-button\" onClick={props.click}>\r\n    <div className=\"toggle-button__line\" style={{ background: props.textColor }} />\r\n    <div className=\"toggle-button__line\" style={{ background: props.textColor }} />\r\n    <div className=\"toggle-button__line\" style={{ background: props.textColor }} />\r\n  </button>\r\n);\r\n\r\nexport default drawerToggleButton;\r\n","import React from \"react\";\r\n\r\nimport DrawerToggleButton from \"../SideDrawer/DrawerToggleButton\";\r\nimport \"./Toolbar.css\";\r\nimport { ThemeContext } from \"../../constants/Themes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst toolbar = (props: any) => (\r\n  <ThemeContext.Consumer>\r\n    {(appContext) =>\r\n      appContext && (\r\n        <header\r\n          className=\"toolbar\"\r\n          style={{\r\n            background:\r\n              \"linear-gradient(to right, \" +\r\n              appContext.theme.primary +\r\n              \", \" +\r\n              appContext.theme.secondary +\r\n              \")\",\r\n          }}\r\n        >\r\n          <nav className=\"toolbar__navigation\">\r\n            <div className=\"toolbar__toggle-button\">\r\n              <DrawerToggleButton click={props.drawerClickHandler} textColor={appContext.theme.text} />\r\n            </div>\r\n            <div className=\"toolbar__logo\">\r\n              <Link to=\"/\" style={{ color: appContext.theme.text }}>\r\n                WELCOME\r\n              </Link>\r\n            </div>\r\n            <div className=\"spacer\" />\r\n            <div className=\"toolbar_navigation-items\">\r\n              <ul>\r\n                <li>\r\n                  <Link className=\"navLink\" to=\"/\" style={{ color: appContext.theme.text }}>\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className=\"navLink\" to=\"/gallery\" style={{ color: appContext.theme.text }}>\r\n                    Gallery\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className=\"navLink\" to=\"/favorites\" style={{ color: appContext.theme.text }}>\r\n                    Favorites\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      )\r\n    }\r\n  </ThemeContext.Consumer>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport { ThemeContext } from \"../../constants/Themes\";\r\n\r\ninterface props {\r\n  theme: any;\r\n  name: string;\r\n}\r\n\r\nfunction ThemeButton(props: props) {\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {(appContext) =>\r\n        appContext && (\r\n          <div>\r\n            <button\r\n              id=\"button\"\r\n              onClick={() => {\r\n                appContext.toggleTheme(props.theme);\r\n                sessionStorage.setItem(\"theme\", JSON.stringify(props.theme));\r\n              }}\r\n            >\r\n              {props.name}\r\n            </button>\r\n          </div>\r\n        )\r\n      }\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n/*\r\nclass ThemeButton extends React.Component<props, {}> {\r\n  render() {\r\n    let props = this.props;\r\n    let theme = this.context;\r\n    return (\r\n      <div className=\"ThemeButton\">\r\n        <button id=\"button\" {...props} style={{ backgroundColor: theme.primary }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nThemeButton.contextType = ThemeContext;\r\n*/\r\n\r\nexport default ThemeButton;\r\n","import React from \"react\";\r\nimport \"./ThemeButton.css\";\r\nimport ThemeButton from \"./ThemeButton\";\r\nimport { themes } from \"../../constants/Themes\";\r\n\r\nconst ThemeButtonContainer = () => {\r\n  return (\r\n    <div className=\"ThemeButContainer\">\r\n      <ThemeButton theme={themes.dark} name=\"dark\" />\r\n      <ThemeButton theme={themes.space} name=\"space\" />\r\n      <ThemeButton theme={themes.beach} name=\"beach\" />\r\n      <ThemeButton theme={themes.crazy} name=\"crazy\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeButtonContainer;\r\n","import React from \"react\";\r\nimport \"./SideDrawer.css\";\r\nimport { ThemeContext } from \"../../constants/Themes\";\r\nimport AudioPlayer from \"../AudioPlayer/AudioPlayer\";\r\nimport ThemeButtonContainer from \"../ThemeButton/ThemeButtonContainer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst sideDrawer = (props: any) => {\r\n  let drawerClasses = \"side-drawer\";\r\n  if (props.show) {\r\n    drawerClasses = \"side-drawer open\";\r\n  }\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {(appContext) =>\r\n        appContext && (\r\n          <nav\r\n            className={drawerClasses}\r\n            style={{\r\n              background:\r\n                \"linear-gradient(to right, \" +\r\n                appContext.theme.primary +\r\n                \", \" +\r\n                appContext.theme.secondary +\r\n                \")\",\r\n            }}\r\n          >\r\n            <ul>\r\n              <li>\r\n                <Link className=\"navLink\" to=\"/\" style={{ color: appContext.theme.text }}>\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link className=\"navLink\" to=\"/gallery\" style={{ color: appContext.theme.text }}>\r\n                  Gallery\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link className=\"navLink\" to=\"/favorites\" style={{ color: appContext.theme.text }}>\r\n                  Favorites\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <div className=\"moodContainer2\">\r\n                  <ThemeButtonContainer />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        )\r\n      }\r\n    </ThemeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React from \"react\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst backdrop = (props: any) => <div className=\"backdrop\" onClick={props.click} />;\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport \"./SvgGallery.css\";\r\nimport { ThemeContext } from \"../../constants/Themes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  svgs: any;\r\n}\r\n\r\nconst SvgGallery = (props: Props) => {\r\n  const gridSvgs = props.svgs;\r\n\r\n  const Iitem = (props: any) => (\r\n    <Link\r\n      className=\"galleryitem\"\r\n      style={{\r\n        backgroundColor: props.bgColor,\r\n        color: props.color,\r\n        display: \"grid\",\r\n      }}\r\n      to={props.link}\r\n    >\r\n      <img height=\"80%\" width=\"70%\" src={props.svgObject.svg} alt=\"\" />\r\n      {props.svgObject.name}\r\n    </Link>\r\n  );\r\n\r\n  const ListItems = (props: any) => (\r\n    <div className=\"gallerycontainer\">\r\n      {props.svgs.map((svgObject: any) => (\r\n        <Iitem\r\n          key={svgObject.index}\r\n          link={\"/\" + svgObject.index}\r\n          i={svgObject.index}\r\n          svgObject={svgObject}\r\n          bgColor={props.bgColor}\r\n          color={props.color}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {(appContext) =>\r\n        appContext && (\r\n          <div>\r\n            <ListItems bgColor={appContext.theme.secondary} color={appContext.theme.text} svgs={gridSvgs} />\r\n          </div>\r\n        )\r\n      }\r\n    </ThemeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default SvgGallery;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport SvgGallery from \"../components/SvgGallery/SvgGallery\";\r\nimport Svgs from \"../svg/Svgs\";\r\n\r\nfunction Gallery() {\r\n  return (\r\n    <div className=\"PageContainer\">\r\n      <SvgGallery svgs={Svgs} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport SvgGallery from \"../components/SvgGallery/SvgGallery\";\r\nimport { ThemeContext } from \"../constants/Themes\";\r\nimport Svgs from \"../svg/Svgs\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Favorites() {\r\n  const [hasFavorites, setHasFavorites] = useState(false);\r\n\r\n  let favorites = localStorage.getItem(\"favorite\");\r\n  if (favorites == null) {\r\n    favorites = \"\";\r\n  }\r\n  let favoriteList = favorites.split(\"\");\r\n\r\n  let svgFavorites = Svgs.filter((svg) => favoriteList.includes(svg.index.toString()));\r\n\r\n  useEffect(() => {\r\n    let favs = localStorage.getItem(\"favorite\")?.length;\r\n    if (favs) {\r\n      setHasFavorites(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {(appContext) =>\r\n        appContext && (\r\n          <div className=\"PageContainer\">\r\n            {!hasFavorites && (\r\n              <div style={{ color: appContext.theme.text, fontSize: \"22px\" }}>\r\n                You don't have any favorites..maybe add some:{\" \"}\r\n                <Link style={{ color: appContext.theme.text }} to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </div>\r\n            )}\r\n            {hasFavorites && <SvgGallery svgs={svgFavorites} />}\r\n          </div>\r\n        )\r\n      }\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport \"./AudioPlayer.css\";\r\nimport { ThemeContext } from \"../../constants/Themes\";\r\n\r\ninterface properties {}\r\n\r\nconst AudioPlayer = (props: properties) => {\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {(appContext) =>\r\n        appContext && (\r\n          <div className=\"audioPlayer\">\r\n            <audio controls autoPlay controlsList=\"nodownload\">\r\n              <source src={require(\"../../constants/music/Time.mp3\")} type=\"audio/mpeg\" />\r\n              <source src={require(\"../../constants/music/CornfieldChase.mp3\")} type=\"audio/mpeg\" />\r\n              <source src={require(\"../../constants/music/DayOne.mp3\")} type=\"audio/mpeg\" />\r\n              Your browser does not support the audio tag.\r\n            </audio>\r\n          </div>\r\n        )\r\n      }\r\n    </ThemeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Toolbar from \"./components/Toolbar/Toolbar\";\r\nimport SideDrawer from \"./components/SideDrawer/SideDrawer\";\r\nimport Backdrop from \"./components/Backdrop/Backdrop\";\r\nimport Gallery from \"./pages/Gallery\";\r\nimport Favorites from \"./pages/Favorites\";\r\nimport { ThemeContext, themes, AppContextInterface } from \"./constants/Themes\";\r\nimport AudioPlayer from \"./components/AudioPlayer/AudioPlayer\";\r\nimport ThemeButtonContainer from \"./components/ThemeButton/ThemeButtonContainer\";\r\n\r\nfunction App() {\r\n  const [sideDrawerOpen, setSideDrawerOpen] = useState(false);\r\n  const selectedTheme = sessionStorage.getItem(\"theme\");\r\n  const startTheme = selectedTheme ? JSON.parse(selectedTheme) : themes.dark;\r\n  const [theme, setTheme] = useState(startTheme);\r\n\r\n  const drawerToggleClickHandler = () => {\r\n    setSideDrawerOpen(!sideDrawerOpen);\r\n  };\r\n\r\n  const backdropClickHandler = () => {\r\n    setSideDrawerOpen(false);\r\n  };\r\n\r\n  const context: AppContextInterface = {\r\n    theme: theme,\r\n    toggleTheme: (val) => setTheme(val),\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={context}>\r\n      <Router>\r\n        <div\r\n          className=\"App\"\r\n          style={{\r\n            background: context.theme.bgImage,\r\n          }}\r\n        >\r\n          <Toolbar drawerClickHandler={drawerToggleClickHandler} />\r\n          <SideDrawer show={sideDrawerOpen} />\r\n          {sideDrawerOpen && <Backdrop click={backdropClickHandler} />}\r\n          <div className=\"moodContainer\">\r\n            <ThemeButtonContainer />\r\n          </div>\r\n          <AudioPlayer />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/gallery\" component={Gallery} />\r\n            <Route exact path=\"/favorites\" component={Favorites} />\r\n            {/* Make sure this route is at the bottom */}\r\n            <Route exact path=\"/:index\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}